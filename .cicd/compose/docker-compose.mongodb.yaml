services:
  db:
    restart: always
    image: mongo:latest
    container_name: ${COMPOSE_PROJECT_NAME}_iot-trafficlights-mongodb
    environment:
      - TZ=Europe/Warsaw
    volumes:
      - ${DB_DIR_MONGODB}:/data/db
    ports:
      - ${DB_PORT}:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017 --quiet
      interval: 120s
      timeout: 30s
      retries: 10
    tty: true
    privileged: true
    networks:
      - iot-trafficlights
  
  api:
    depends_on:
      db:
        condition: service_healthy
    restart: always
    image: qbituniverse/iot-trafficlights-api:latest
    container_name: ${COMPOSE_PROJECT_NAME}_iot-trafficlights-api
    environment:
      - TZ=Europe/Warsaw
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ApiConfiguration__Environment=${ENVIRONMENT}
      - ApiConfiguration__LogLevel__Console=Information
      - ApiConfiguration__LogLevel__Database=Error
      - ApiConfiguration__Repository__Type=MongoDb
      - ApiConfiguration__Repository__MongoDb__Url=mongodb://${COMPOSE_PROJECT_NAME}_iot-trafficlights-mongodb:27017
      - ApiConfiguration__Modules__TrafficControl__Type=${GPIO}
    ports:
      - ${API_PORT}:8080
    healthcheck:
      test: curl --fail http://localhost:8080/healthz || exit 1
      interval: 30s
      timeout: 30s
      retries: 10
    tty: true
    privileged: true
    networks:
      - iot-trafficlights

  web:
    depends_on:
      api:
        condition: service_healthy
    restart: always
    image: qbituniverse/iot-trafficlights-web:latest
    container_name: ${COMPOSE_PROJECT_NAME}_iot-trafficlights-web
    environment:
      - TZ=Europe/Warsaw
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - WebConfiguration__Environment=${ENVIRONMENT}
      - WebConfiguration__LogLevel__Console=Information
      - WebConfiguration__LogLevel__Database=Error
      - WebConfiguration__Repository__Type=MongoDb
      - WebConfiguration__Repository__MongoDb__Url=mongodb://${COMPOSE_PROJECT_NAME}_iot-trafficlights-mongodb:27017
      - WebConfiguration__Api__Url=http://${COMPOSE_PROJECT_NAME}_iot-trafficlights-api:8080
    ports:
      - ${WEB_PORT}:8080
    healthcheck:
      test: curl --fail http://localhost:8080/healthz || exit 1
      interval: 30s
      timeout: 30s
      retries: 10
    tty: true
    privileged: true
    networks:
      - iot-trafficlights

  console:
    depends_on:
      web:
        condition: service_healthy
    restart: always
    image: qbituniverse/iot-trafficlights-console:latest
    container_name: ${COMPOSE_PROJECT_NAME}_iot-trafficlights-console
    environment:
      - TZ=Europe/Warsaw
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ConsoleConfiguration__Environment=${ENVIRONMENT}
      - ConsoleConfiguration__LogLevel__Console=Information
      - ConsoleConfiguration__LogLevel__Database=Error
      - ConsoleConfiguration__Repository__Type=MongoDb
      - ConsoleConfiguration__Repository__MongoDb__Url=mongodb://${COMPOSE_PROJECT_NAME}_iot-trafficlights-mongodb:27017
      - ConsoleConfiguration__Modules__TrafficControl__Type=${GPIO}
      - ConsoleConfiguration__Modules__TrafficSensor__Type=${GPIO}
      - ConsoleConfiguration__Run=${RUN}
    tty: true
    privileged: true
    networks:
      - iot-trafficlights

  mongoexpress:
    depends_on:
      web:
        condition: service_healthy
    restart: always
    image: mongo-express:latest
    container_name: ${COMPOSE_PROJECT_NAME}_iot-trafficlights-mongoexpress
    environment:
      - TZ=Europe/Warsaw
      - ME_CONFIG_MONGODB_SERVER=${COMPOSE_PROJECT_NAME}_iot-trafficlights-mongodb
    ports:
      - ${DB_BROWSER_PORT}:8081
    tty: true
    privileged: true
    networks:
      - iot-trafficlights

networks:
  iot-trafficlights:
    driver: bridge